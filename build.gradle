plugins {
    id 'me.champeau.jmh' version '0.7.3'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'java'
    id 'maven-publish'
    id 'signing'
}

defaultTasks 'build'

group = 'org.pcollections'
version = '4.0.3'

description = """PCollections"""

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit 5: JUnit Jupiter + JUnit Vintage [for running JUnit 3/4 tests as well]
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.0"
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.0'
    testImplementation 'org.assertj:assertj-core:3.23.1'
}

test {
    useJUnitPlatform() // Use JUnit 5
}

java {
    withSourcesJar()
    withJavadocJar()
}

task copyJavadocDocFiles(type: Copy) {
    from('src/main/java')
    into 'build/docs/javadoc'
    include '**/doc-files/*.*'
}

javadoc {
    dependsOn copyJavadocDocFiles // https://github.com/gradle/gradle/issues/4046
    options.addBooleanOption('Xdoclint:none', true) // https://github.com/hrldcpr/pcollections/issues/62
}

publishing {
  repositories {
    maven {
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
      url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

      credentials {
        username providers.gradleProperty('ossrhUsername').getOrElse('dummy')
        password providers.gradleProperty('ossrhPassword').getOrElse('dummy')
      }
    }
  }
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifactId = 'pcollections'

      pom {
        name = 'PCollections'
        packaging = 'jar'
        description = 'A Persistent Java Collections Library'
        url = 'https://github.com/hrldcpr/pcollections'

        scm {
          connection = 'scm:git:git://github.com/hrldcpr/pcollections.git'
          developerConnection = 'scm:git:ssh://github.com:hrldcpr/pcollections.git'
          url = 'https://github.com/hrldcpr/pcollections'
        }

        licenses {
          license {
            name = 'The MIT License'
            url = 'https://opensource.org/licenses/mit-license.php'
          }
        }

        developers {
          developer {
            id = 'hrldcpr'
            name = 'Harold Cooper'
            email = 'hrldcpr@gmail.com'
          }
        }
      }
    }
  }
}

signing {
    sign(publishing.publications.mavenJava)
}

modularity.mixedJavaRelease 8
